<?xml version="1.0"?>
<wsdl:definitions name="ANZ_LOCATION_INC_DETAIL.1" targetNamespace="http://xmlns.oracle.com/Enterprise/Tools/services/ANZ_LOCATION_INC_DETAIL.1" xmlns:ANZ_LOC_INC_REQ.v1="http://xmlns.oracle.com/Enterprise/Tools/schemas/ANZ_LOC_INC_REQ.v1" xmlns:ANZ_LOC_INC_RES.v1="http://xmlns.oracle.com/Enterprise/Tools/schemas/ANZ_LOC_INC_RES.v1" xmlns:plnk="http://schemas.xmlsoap.org/ws/2003/05/partner-link/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="http://xmlns.oracle.com/Enterprise/Tools/services/ANZ_LOCATION_INC_DETAIL.1" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy">
  <wsp:UsagePolicy wsdl:Required="true"/>
  <plnk:partnerLinkType name="ANZ_LOCATION_INC_DETAIL_PartnerLinkType">
    <plnk:role name="ANZ_LOCATION_INC_DETAIL_Provider">
      <plnk:portType name="tns:ANZ_LOCATION_INC_DETAIL_PortType"/>
    </plnk:role>
  </plnk:partnerLinkType>
  <wsdl:types>
    <xsd:schema elementFormDefault="qualified" targetNamespace="http://xmlns.oracle.com/Enterprise/Tools/schemas/ANZ_LOC_INC_REQ.v1" xmlns="http://xmlns.oracle.com/Enterprise/Tools/schemas/ANZ_LOC_INC_REQ.v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
      <xsd:element name="ANZ_LOC_INC_REQ" type="ANZ_LOC_INC_REQ_TypeShape"/>
      <xsd:complexType name="ANZ_LOC_INC_REQ_TypeShape">
        <xsd:sequence>
          <xsd:element name="FieldTypes" type="FieldTypes_TypeShape"/>
          <xsd:element name="MsgData" type="MsgData_TypeShape"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="FieldTypes_TypeShape">
        <xsd:all>
          <xsd:element name="ANZ_LOC_INC_REQ" type="FieldTypesANZ_LOC_INC_REQ_TypeShape"/>
          <xsd:element name="PSCAMA" type="FieldTypesPSCAMA_TypeShape"/>
        </xsd:all>
      </xsd:complexType>
      <xsd:complexType name="FieldTypesANZ_LOC_INC_REQ_TypeShape">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="DTTM_FROM" type="FieldTypesDateTimeFieldType"/>
          <xsd:element minOccurs="0" name="DTTM_TO" type="FieldTypesDateTimeFieldType"/>
          <xsd:element minOccurs="0" name="ANZ_LANID" type="FieldTypesCharFieldType"/>
          <xsd:element minOccurs="0" name="EMPLID" type="FieldTypesCharFieldType"/>
          <xsd:element minOccurs="0" name="EMPL_RCD" type="FieldTypesNumberFieldType"/>
          <xsd:element name="EFFDT" type="FieldTypesDateFieldType"/>
          <xsd:element minOccurs="0" name="EFFSEQ" type="FieldTypesNumberFieldType"/>
          <xsd:element minOccurs="0" name="DEPTID" type="FieldTypesCharFieldType"/>
          <xsd:element minOccurs="0" name="JOBCODE" type="FieldTypesCharFieldType"/>
          <xsd:element minOccurs="0" name="EMPL_STATUS" type="FieldTypesCharFieldType"/>
          <xsd:element minOccurs="0" name="HR_STATUS" type="FieldTypesCharFieldType"/>
          <xsd:element minOccurs="0" name="POSITION_NBR" type="FieldTypesCharFieldType"/>
          <xsd:element minOccurs="0" name="REPORTS_TO" type="FieldTypesCharFieldType"/>
          <xsd:element minOccurs="0" name="DATE1" type="FieldTypesDateFieldType"/>
          <xsd:element minOccurs="0" name="DATE2" type="FieldTypesDateFieldType"/>
          <xsd:element minOccurs="0" name="DATE3" type="FieldTypesDateFieldType"/>
          <xsd:element minOccurs="0" name="DATE4" type="FieldTypesDateFieldType"/>
          <xsd:element minOccurs="0" name="DATE5" type="FieldTypesDateFieldType"/>
          <xsd:element minOccurs="0" name="FLAG1" type="FieldTypesCharFieldType"/>
          <xsd:element minOccurs="0" name="FLAG2" type="FieldTypesCharFieldType"/>
          <xsd:element minOccurs="0" name="FLAG3" type="FieldTypesCharFieldType"/>
          <xsd:element minOccurs="0" name="FLAG4" type="FieldTypesCharFieldType"/>
          <xsd:element minOccurs="0" name="FLAG5" type="FieldTypesCharFieldType"/>
          <xsd:element minOccurs="0" name="DESCR100A" type="FieldTypesCharFieldType"/>
          <xsd:element minOccurs="0" name="DESCR100B" type="FieldTypesCharFieldType"/>
          <xsd:element minOccurs="0" name="DESCR100C" type="FieldTypesCharFieldType"/>
          <xsd:element minOccurs="0" name="DESCR100D" type="FieldTypesCharFieldType"/>
          <xsd:element minOccurs="0" name="DESCR100F" type="FieldTypesCharFieldType"/>
          <xsd:element minOccurs="0" name="DESCR100E" type="FieldTypesCharFieldType"/>
          <xsd:element minOccurs="0" name="DESCR100G" type="FieldTypesCharFieldType"/>
          <xsd:element minOccurs="0" name="DESCR100H" type="FieldTypesCharFieldType"/>
          <xsd:element minOccurs="0" name="DESCR100I" type="FieldTypesCharFieldType"/>
          <xsd:element minOccurs="0" name="DESCR100J" type="FieldTypesCharFieldType"/>
        </xsd:sequence>
        <xsd:attribute fixed="R" name="class" type="xsd:string" use="required"/>
      </xsd:complexType>
      <xsd:complexType name="FieldTypesPSCAMA_TypeShape">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="LANGUAGE_CD" type="FieldTypesCharFieldType"/>
          <xsd:element minOccurs="0" name="AUDIT_ACTN" type="FieldTypesCharFieldType"/>
          <xsd:element minOccurs="0" name="BASE_LANGUAGE_CD" type="FieldTypesCharFieldType"/>
          <xsd:element minOccurs="0" name="MSG_SEQ_FLG" type="FieldTypesCharFieldType"/>
          <xsd:element minOccurs="0" name="PROCESS_INSTANCE" type="FieldTypesNumberFieldType"/>
          <xsd:element minOccurs="0" name="PUBLISH_RULE_ID" type="FieldTypesCharFieldType"/>
          <xsd:element minOccurs="0" name="MSGNODENAME" type="FieldTypesCharFieldType"/>
        </xsd:sequence>
        <xsd:attribute fixed="R" name="class" type="xsd:string" use="required"/>
      </xsd:complexType>
      <xsd:complexType name="FieldTypesCharFieldType">
        <xsd:attribute fixed="CHAR" name="type" type="xsd:string" use="required"/>
      </xsd:complexType>
      <xsd:complexType name="FieldTypesNumberFieldType">
        <xsd:attribute fixed="NUMBER" name="type" type="xsd:string" use="required"/>
      </xsd:complexType>
      <xsd:complexType name="FieldTypesDateFieldType">
        <xsd:attribute fixed="DATE" name="type" type="xsd:string" use="required"/>
      </xsd:complexType>
      <xsd:complexType name="FieldTypesTimeFieldType">
        <xsd:attribute fixed="TIME" name="type" type="xsd:string" use="required"/>
      </xsd:complexType>
      <xsd:complexType name="FieldTypesDateTimeFieldType">
        <xsd:attribute fixed="DATETIME" name="type" type="xsd:string" use="required"/>
      </xsd:complexType>
      <xsd:complexType name="FieldTypesImageRefFieldType">
        <xsd:attribute fixed="IMAGEREFERENCE" name="type" type="xsd:string" use="required"/>
      </xsd:complexType>
      <xsd:complexType name="MsgData_TypeShape">
        <xsd:sequence>
          <xsd:element maxOccurs="unbounded" minOccurs="0" name="Transaction" type="Transaction_TypeShape"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="Transaction_TypeShape">
        <xsd:all>
          <xsd:element minOccurs="0" name="ANZ_LOC_INC_REQ" type="ANZ_LOC_INC_REQMsgDataRecord_TypeShape"/>
          <xsd:element name="PSCAMA" type="PSCAMAMsgDataRecord_TypeShape"/>
        </xsd:all>
      </xsd:complexType>
      <xsd:complexType name="ANZ_LOC_INC_REQMsgDataRecord_TypeShape">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="DTTM_FROM" type="DTTM_FROM_TypeShape"/>
          <xsd:element minOccurs="0" name="DTTM_TO" type="DTTM_TO_TypeShape"/>
          <xsd:element minOccurs="0" name="ANZ_LANID" type="ANZ_LANID_TypeShape"/>
          <xsd:element minOccurs="0" name="EMPLID" type="EMPLID_TypeShape"/>
          <xsd:element minOccurs="0" name="EMPL_RCD" type="EMPL_RCD_TypeShape"/>
          <xsd:element name="EFFDT" type="EFFDT_TypeShape"/>
          <xsd:element minOccurs="0" name="EFFSEQ" type="EFFSEQ_TypeShape"/>
          <xsd:element minOccurs="0" name="DEPTID" type="DEPTID_TypeShape"/>
          <xsd:element minOccurs="0" name="JOBCODE" type="JOBCODE_TypeShape"/>
          <xsd:element minOccurs="0" name="EMPL_STATUS" type="EMPL_STATUS_TypeShape"/>
          <xsd:element minOccurs="0" name="HR_STATUS" type="HR_STATUS_TypeShape"/>
          <xsd:element minOccurs="0" name="POSITION_NBR" type="POSITION_NBR_TypeShape"/>
          <xsd:element minOccurs="0" name="REPORTS_TO" type="REPORTS_TO_TypeShape"/>
          <xsd:element minOccurs="0" name="DATE1" type="DATE1_TypeShape"/>
          <xsd:element minOccurs="0" name="DATE2" type="DATE2_TypeShape"/>
          <xsd:element minOccurs="0" name="DATE3" type="DATE3_TypeShape"/>
          <xsd:element minOccurs="0" name="DATE4" type="DATE4_TypeShape"/>
          <xsd:element minOccurs="0" name="DATE5" type="DATE5_TypeShape"/>
          <xsd:element minOccurs="0" name="FLAG1" type="FLAG1_TypeShape"/>
          <xsd:element minOccurs="0" name="FLAG2" type="FLAG2_TypeShape"/>
          <xsd:element minOccurs="0" name="FLAG3" type="FLAG3_TypeShape"/>
          <xsd:element minOccurs="0" name="FLAG4" type="FLAG4_TypeShape"/>
          <xsd:element minOccurs="0" name="FLAG5" type="FLAG5_TypeShape"/>
          <xsd:element minOccurs="0" name="DESCR100A" type="DESCR100A_TypeShape"/>
          <xsd:element minOccurs="0" name="DESCR100B" type="DESCR100B_TypeShape"/>
          <xsd:element minOccurs="0" name="DESCR100C" type="DESCR100C_TypeShape"/>
          <xsd:element minOccurs="0" name="DESCR100D" type="DESCR100D_TypeShape"/>
          <xsd:element minOccurs="0" name="DESCR100F" type="DESCR100F_TypeShape"/>
          <xsd:element minOccurs="0" name="DESCR100E" type="DESCR100E_TypeShape"/>
          <xsd:element minOccurs="0" name="DESCR100G" type="DESCR100G_TypeShape"/>
          <xsd:element minOccurs="0" name="DESCR100H" type="DESCR100H_TypeShape"/>
          <xsd:element minOccurs="0" name="DESCR100I" type="DESCR100I_TypeShape"/>
          <xsd:element minOccurs="0" name="DESCR100J" type="DESCR100J_TypeShape"/>
        </xsd:sequence>
        <xsd:attribute fixed="R" name="class" type="xsd:string" use="required"/>
      </xsd:complexType>
      <xsd:complexType name="DTTM_FROM_TypeShape">
        <xsd:simpleContent>
          <xsd:extension base="DTTM_FROM_TypeDef">
            <xsd:attribute name="IsChanged" type="xsd:string" use="optional"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="DTTM_TO_TypeShape">
        <xsd:simpleContent>
          <xsd:extension base="DTTM_TO_TypeDef">
            <xsd:attribute name="IsChanged" type="xsd:string" use="optional"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="ANZ_LANID_TypeShape">
        <xsd:simpleContent>
          <xsd:extension base="ANZ_LANID_TypeDef">
            <xsd:attribute name="IsChanged" type="xsd:string" use="optional"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="EMPLID_TypeShape">
        <xsd:simpleContent>
          <xsd:extension base="EMPLID_TypeDef">
            <xsd:attribute name="IsChanged" type="xsd:string" use="optional"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="EMPL_RCD_TypeShape">
        <xsd:simpleContent>
          <xsd:extension base="EMPL_RCD_TypeDef">
            <xsd:attribute name="IsChanged" type="xsd:string" use="optional"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="EFFDT_TypeShape">
        <xsd:simpleContent>
          <xsd:extension base="EFFDT_TypeDef">
            <xsd:attribute name="IsChanged" type="xsd:string" use="optional"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="EFFSEQ_TypeShape">
        <xsd:simpleContent>
          <xsd:extension base="EFFSEQ_TypeDef">
            <xsd:attribute name="IsChanged" type="xsd:string" use="optional"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="DEPTID_TypeShape">
        <xsd:simpleContent>
          <xsd:extension base="DEPTID_TypeDef">
            <xsd:attribute name="IsChanged" type="xsd:string" use="optional"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="JOBCODE_TypeShape">
        <xsd:simpleContent>
          <xsd:extension base="JOBCODE_TypeDef">
            <xsd:attribute name="IsChanged" type="xsd:string" use="optional"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="EMPL_STATUS_TypeShape">
        <xsd:simpleContent>
          <xsd:extension base="EMPL_STATUS_TypeDef">
            <xsd:attribute name="IsChanged" type="xsd:string" use="optional"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="HR_STATUS_TypeShape">
        <xsd:simpleContent>
          <xsd:extension base="HR_STATUS_TypeDef">
            <xsd:attribute name="IsChanged" type="xsd:string" use="optional"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="POSITION_NBR_TypeShape">
        <xsd:simpleContent>
          <xsd:extension base="POSITION_NBR_TypeDef">
            <xsd:attribute name="IsChanged" type="xsd:string" use="optional"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="REPORTS_TO_TypeShape">
        <xsd:simpleContent>
          <xsd:extension base="REPORTS_TO_TypeDef">
            <xsd:attribute name="IsChanged" type="xsd:string" use="optional"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="DATE1_TypeShape">
        <xsd:simpleContent>
          <xsd:extension base="DATE1_TypeDef">
            <xsd:attribute name="IsChanged" type="xsd:string" use="optional"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="DATE2_TypeShape">
        <xsd:simpleContent>
          <xsd:extension base="DATE2_TypeDef">
            <xsd:attribute name="IsChanged" type="xsd:string" use="optional"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="DATE3_TypeShape">
        <xsd:simpleContent>
          <xsd:extension base="DATE3_TypeDef">
            <xsd:attribute name="IsChanged" type="xsd:string" use="optional"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="DATE4_TypeShape">
        <xsd:simpleContent>
          <xsd:extension base="DATE4_TypeDef">
            <xsd:attribute name="IsChanged" type="xsd:string" use="optional"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="DATE5_TypeShape">
        <xsd:simpleContent>
          <xsd:extension base="DATE5_TypeDef">
            <xsd:attribute name="IsChanged" type="xsd:string" use="optional"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="FLAG1_TypeShape">
        <xsd:simpleContent>
          <xsd:extension base="FLAG1_TypeDef">
            <xsd:attribute name="IsChanged" type="xsd:string" use="optional"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="FLAG2_TypeShape">
        <xsd:simpleContent>
          <xsd:extension base="FLAG2_TypeDef">
            <xsd:attribute name="IsChanged" type="xsd:string" use="optional"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="FLAG3_TypeShape">
        <xsd:simpleContent>
          <xsd:extension base="FLAG3_TypeDef">
            <xsd:attribute name="IsChanged" type="xsd:string" use="optional"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="FLAG4_TypeShape">
        <xsd:simpleContent>
          <xsd:extension base="FLAG4_TypeDef">
            <xsd:attribute name="IsChanged" type="xsd:string" use="optional"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="FLAG5_TypeShape">
        <xsd:simpleContent>
          <xsd:extension base="FLAG5_TypeDef">
            <xsd:attribute name="IsChanged" type="xsd:string" use="optional"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="DESCR100A_TypeShape">
        <xsd:simpleContent>
          <xsd:extension base="DESCR100A_TypeDef">
            <xsd:attribute name="IsChanged" type="xsd:string" use="optional"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="DESCR100B_TypeShape">
        <xsd:simpleContent>
          <xsd:extension base="DESCR100B_TypeDef">
            <xsd:attribute name="IsChanged" type="xsd:string" use="optional"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="DESCR100C_TypeShape">
        <xsd:simpleContent>
          <xsd:extension base="DESCR100C_TypeDef">
            <xsd:attribute name="IsChanged" type="xsd:string" use="optional"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="DESCR100D_TypeShape">
        <xsd:simpleContent>
          <xsd:extension base="DESCR100D_TypeDef">
            <xsd:attribute name="IsChanged" type="xsd:string" use="optional"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="DESCR100F_TypeShape">
        <xsd:simpleContent>
          <xsd:extension base="DESCR100F_TypeDef">
            <xsd:attribute name="IsChanged" type="xsd:string" use="optional"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="DESCR100E_TypeShape">
        <xsd:simpleContent>
          <xsd:extension base="DESCR100E_TypeDef">
            <xsd:attribute name="IsChanged" type="xsd:string" use="optional"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="DESCR100G_TypeShape">
        <xsd:simpleContent>
          <xsd:extension base="DESCR100G_TypeDef">
            <xsd:attribute name="IsChanged" type="xsd:string" use="optional"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="DESCR100H_TypeShape">
        <xsd:simpleContent>
          <xsd:extension base="DESCR100H_TypeDef">
            <xsd:attribute name="IsChanged" type="xsd:string" use="optional"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="DESCR100I_TypeShape">
        <xsd:simpleContent>
          <xsd:extension base="DESCR100I_TypeDef">
            <xsd:attribute name="IsChanged" type="xsd:string" use="optional"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="DESCR100J_TypeShape">
        <xsd:simpleContent>
          <xsd:extension base="DESCR100J_TypeDef">
            <xsd:attribute name="IsChanged" type="xsd:string" use="optional"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:simpleType name="DTTM_FROM_TypeDef">
        <xsd:annotation>
          <xsd:documentation>DTTM_FROM is a datetime.</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:pattern value="(\d{4}-\d{2}-\d{2})(T(0[0-9]|1[0-9]|2[0-3])(:[0-5][0-9]){2})(.\d{6})(\+|\-)(\d{4})"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="DTTM_TO_TypeDef">
        <xsd:annotation>
          <xsd:documentation>DTTM_TO is a datetime.</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:pattern value="(\d{4}-\d{2}-\d{2})(T(0[0-9]|1[0-9]|2[0-3])(:[0-5][0-9]){2})(.\d{6})(\+|\-)(\d{4})"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="ANZ_LANID_TypeDef">
        <xsd:annotation>
          <xsd:documentation>MArk Plummer/ANZWR100113/24-4-2014
Increased size to 20 to allow longer lanids to be used including admin accounts 

Prashanth Haligya
ANZWR27100
29/08/2011
Added a field label

Santhana, 3/10/2002
ANZTSR9601_SEC
- Employee LAN id field

C.Sridhar, 01/08/2006
ANZWR03364
INFMS89 Implementaion for SSO</xsd:documentation>
          <xsd:documentation>ANZ_LANID is a character of length 20</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="20"/>
          <xsd:whiteSpace value="preserve"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="EMPLID_TypeDef">
        <xsd:annotation>
          <xsd:documentation>Employee ID</xsd:documentation>
          <xsd:documentation>EMPLID is a character of length 11. Allows Uppercase characters including numbers</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="11"/>
          <xsd:whiteSpace value="preserve"/>
          <xsd:pattern value="([A-Z]|[0-9]|\p{Z}|\p{P}|\p{Lu})*"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="EMPL_RCD_TypeDef">
        <xsd:annotation>
          <xsd:documentation>Empl Rcd Nbr                  </xsd:documentation>
          <xsd:documentation>EMPL_RCD is a number of length 3 with a decimal position of 0</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:integer">
          <xsd:totalDigits value="3"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="EFFDT_TypeDef">
        <xsd:annotation>
          <xsd:documentation>Effective Date</xsd:documentation>
          <xsd:documentation>EFFDT is a date.</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:date">
          <xsd:pattern value="(\d{4}-\d{2}-\d{2})"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="EFFSEQ_TypeDef">
        <xsd:annotation>
          <xsd:documentation>Effective Sequence            </xsd:documentation>
          <xsd:documentation>EFFSEQ is a number of length 3 with a decimal position of 0</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:integer">
          <xsd:totalDigits value="3"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="DEPTID_TypeDef">
        <xsd:annotation>
          <xsd:documentation>Department.
/***********************************************************************************Project                 :ANZWR100955_COUNTRY_SETUP
Work Request     :WR100955
Developer            :Nagaraju Rayapati
Date                     :13/Apr/2016
Description           : As part of Promadis project added Property Label to DEPTID Field.
************************************************************************************/</xsd:documentation>
          <xsd:documentation>DEPTID is a character of length 10. Allows Uppercase characters including numbers</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="10"/>
          <xsd:whiteSpace value="preserve"/>
          <xsd:pattern value="([A-Z]|[0-9]|\p{Z}|\p{P}|\p{Lu})*"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="JOBCODE_TypeDef">
        <xsd:annotation>
          <xsd:documentation>Job Code</xsd:documentation>
          <xsd:documentation>JOBCODE is a character of length 6. Allows Uppercase characters including numbers</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="6"/>
          <xsd:whiteSpace value="preserve"/>
          <xsd:pattern value="([A-Z]|[0-9]|\p{Z}|\p{P}|\p{Lu})*"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="EMPL_STATUS_TypeDef">
        <xsd:annotation>
          <xsd:documentation>Employee Status</xsd:documentation>
          <xsd:documentation>EMPL_STATUS is a character of length 1. Allows Uppercase characters including numbers</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="1"/>
          <xsd:whiteSpace value="preserve"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="HR_STATUS_TypeDef">
        <xsd:annotation>
          <xsd:documentation>ANZWR100055
Modified by: Paramita chakraborty
06-01-2014
Created new fields for storing HR_STATUS coming from HR through IB</xsd:documentation>
          <xsd:documentation>HR_STATUS is a character of length 1. Allows Uppercase characters including numbers</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="1"/>
          <xsd:whiteSpace value="preserve"/>
          <xsd:pattern value="([A-Z]|[0-9]|\p{Z}|\p{P}|\p{Lu})*"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="POSITION_NBR_TypeDef">
        <xsd:annotation>
          <xsd:documentation>Position Number               </xsd:documentation>
          <xsd:documentation>POSITION_NBR is a character of length 8. Allows Uppercase characters including numbers</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="8"/>
          <xsd:whiteSpace value="preserve"/>
          <xsd:pattern value="([A-Z]|[0-9]|\p{Z}|\p{P}|\p{Lu})*"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="REPORTS_TO_TypeDef">
        <xsd:annotation>
          <xsd:documentation>Reports To Position Number    </xsd:documentation>
          <xsd:documentation>REPORTS_TO is a character of length 8. Allows Uppercase characters including numbers</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="8"/>
          <xsd:whiteSpace value="preserve"/>
          <xsd:pattern value="([A-Z]|[0-9]|\p{Z}|\p{P}|\p{Lu})*"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="DATE1_TypeDef">
        <xsd:annotation>
          <xsd:documentation>DATE1 is a date.</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:date">
          <xsd:pattern value="(\d{4}-\d{2}-\d{2})"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="DATE2_TypeDef">
        <xsd:annotation>
          <xsd:documentation>DATE2 is a date.</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:date">
          <xsd:pattern value="(\d{4}-\d{2}-\d{2})"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="DATE3_TypeDef">
        <xsd:annotation>
          <xsd:documentation>DATE3 is a date.</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:date">
          <xsd:pattern value="(\d{4}-\d{2}-\d{2})"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="DATE4_TypeDef">
        <xsd:annotation>
          <xsd:documentation>DATE4 is a date.</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:date">
          <xsd:pattern value="(\d{4}-\d{2}-\d{2})"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="DATE5_TypeDef">
        <xsd:annotation>
          <xsd:documentation>DATE5 is a date.</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:date">
          <xsd:pattern value="(\d{4}-\d{2}-\d{2})"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="FLAG1_TypeDef">
        <xsd:annotation>
          <xsd:documentation>J.Chavarria, 22/01/2002
ANZCR1538_R4
- include new label ID (ANZ_PS_CONFIG_DATA) for the Reporting dataStore setup.</xsd:documentation>
          <xsd:documentation>FLAG1 is a character of length 1. Allows Uppercase characters including numbers</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="1"/>
          <xsd:whiteSpace value="preserve"/>
          <xsd:pattern value="([A-Z]|[0-9]|\p{Z}|\p{P}|\p{Lu})*"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="FLAG2_TypeDef">
        <xsd:annotation>
          <xsd:documentation>J.Chavarria, 22/01/2002
ANZCR1538_R4
- include new label ID (ANZ_PS_INQUIRY) for the Reporting dataStore setup.</xsd:documentation>
          <xsd:documentation>FLAG2 is a character of length 1. Allows Uppercase characters including numbers</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="1"/>
          <xsd:whiteSpace value="preserve"/>
          <xsd:pattern value="([A-Z]|[0-9]|\p{Z}|\p{P}|\p{Lu})*"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="FLAG3_TypeDef">
        <xsd:annotation>
          <xsd:documentation>J.Chavarria, 22/01/2002
ANZCR1538_R4
- include new label ID (ANZ_GENERATE_VIEW) for the Reporting dataStore setup.</xsd:documentation>
          <xsd:documentation>FLAG3 is a character of length 1. Allows Uppercase characters including numbers</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="1"/>
          <xsd:whiteSpace value="preserve"/>
          <xsd:pattern value="([A-Z]|[0-9]|\p{Z}|\p{P}|\p{Lu})*"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="FLAG4_TypeDef">
        <xsd:annotation>
          <xsd:documentation>J.Chavarria, 22/01/2002
ANZCR1538_R4
- include new label ID (ANZ_WITH_HISTORY) for the Reporting dataStore setup.</xsd:documentation>
          <xsd:documentation>FLAG4 is a character of length 1. Allows Uppercase characters including numbers</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="1"/>
          <xsd:whiteSpace value="preserve"/>
          <xsd:pattern value="([A-Z]|[0-9]|\p{Z}|\p{P}|\p{Lu})*"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="FLAG5_TypeDef">
        <xsd:annotation>
          <xsd:documentation>FLAG5 is a character of length 1. Allows Uppercase characters including numbers</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="1"/>
          <xsd:whiteSpace value="preserve"/>
          <xsd:pattern value="([A-Z]|[0-9]|\p{Z}|\p{P}|\p{Lu})*"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="DESCR100A_TypeDef">
        <xsd:annotation>
          <xsd:documentation>DESCR100A is a character of length 100</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="100"/>
          <xsd:whiteSpace value="preserve"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="DESCR100B_TypeDef">
        <xsd:annotation>
          <xsd:documentation>DESCR100B is a character of length 100</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="100"/>
          <xsd:whiteSpace value="preserve"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="DESCR100C_TypeDef">
        <xsd:annotation>
          <xsd:documentation>DESCR100C is a character of length 100</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="100"/>
          <xsd:whiteSpace value="preserve"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="DESCR100D_TypeDef">
        <xsd:annotation>
          <xsd:documentation>DESCR100D is a character of length 100</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="100"/>
          <xsd:whiteSpace value="preserve"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="DESCR100F_TypeDef">
        <xsd:annotation>
          <xsd:documentation>DESCR100F is a character of length 100</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="100"/>
          <xsd:whiteSpace value="preserve"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="DESCR100E_TypeDef">
        <xsd:annotation>
          <xsd:documentation>DESCR100E is a character of length 100</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="100"/>
          <xsd:whiteSpace value="preserve"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="DESCR100G_TypeDef">
        <xsd:annotation>
          <xsd:documentation>DESCR100G is a character of length 100</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="100"/>
          <xsd:whiteSpace value="preserve"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="DESCR100H_TypeDef">
        <xsd:annotation>
          <xsd:documentation>DESCR100H is a character of length 100</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="100"/>
          <xsd:whiteSpace value="preserve"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="DESCR100I_TypeDef">
        <xsd:annotation>
          <xsd:documentation>DESCR100I is a character of length 100</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="100"/>
          <xsd:whiteSpace value="preserve"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="DESCR100J_TypeDef">
        <xsd:annotation>
          <xsd:documentation>DESCR100J is a character of length 100</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="100"/>
          <xsd:whiteSpace value="preserve"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="PSCAMAMsgDataRecord_TypeShape">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="LANGUAGE_CD" type="LANGUAGE_CD_TypeShape"/>
          <xsd:element minOccurs="0" name="AUDIT_ACTN" type="AUDIT_ACTN_TypeShape"/>
          <xsd:element minOccurs="0" name="BASE_LANGUAGE_CD" type="BASE_LANGUAGE_CD_TypeShape"/>
          <xsd:element minOccurs="0" name="MSG_SEQ_FLG" type="MSG_SEQ_FLG_TypeShape"/>
          <xsd:element minOccurs="0" name="PROCESS_INSTANCE" type="PROCESS_INSTANCE_TypeShape"/>
          <xsd:element minOccurs="0" name="PUBLISH_RULE_ID" type="PUBLISH_RULE_ID_TypeShape"/>
          <xsd:element minOccurs="0" name="MSGNODENAME" type="MSGNODENAME_TypeShape"/>
        </xsd:sequence>
        <xsd:attribute fixed="R" name="class" type="xsd:string" use="required"/>
      </xsd:complexType>
      <xsd:complexType name="LANGUAGE_CD_TypeShape">
        <xsd:simpleContent>
          <xsd:extension base="LANGUAGE_CD_TypeDef">
            <xsd:attribute name="IsChanged" type="xsd:string" use="optional"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="AUDIT_ACTN_TypeShape">
        <xsd:simpleContent>
          <xsd:extension base="AUDIT_ACTN_TypeDef">
            <xsd:attribute name="IsChanged" type="xsd:string" use="optional"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="BASE_LANGUAGE_CD_TypeShape">
        <xsd:simpleContent>
          <xsd:extension base="BASE_LANGUAGE_CD_TypeDef">
            <xsd:attribute name="IsChanged" type="xsd:string" use="optional"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="MSG_SEQ_FLG_TypeShape">
        <xsd:simpleContent>
          <xsd:extension base="MSG_SEQ_FLG_TypeDef">
            <xsd:attribute name="IsChanged" type="xsd:string" use="optional"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="PROCESS_INSTANCE_TypeShape">
        <xsd:simpleContent>
          <xsd:extension base="PROCESS_INSTANCE_TypeDef">
            <xsd:attribute name="IsChanged" type="xsd:string" use="optional"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="PUBLISH_RULE_ID_TypeShape">
        <xsd:simpleContent>
          <xsd:extension base="PUBLISH_RULE_ID_TypeDef">
            <xsd:attribute name="IsChanged" type="xsd:string" use="optional"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="MSGNODENAME_TypeShape">
        <xsd:simpleContent>
          <xsd:extension base="MSGNODENAME_TypeDef">
            <xsd:attribute name="IsChanged" type="xsd:string" use="optional"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:simpleType name="LANGUAGE_CD_TypeDef">
        <xsd:annotation>
          <xsd:documentation>Language Code</xsd:documentation>
          <xsd:documentation>LANGUAGE_CD is a character of length 3. Allows Uppercase characters including numbers</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="3"/>
          <xsd:whiteSpace value="preserve"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="AUDIT_ACTN_TypeDef">
        <xsd:annotation>
          <xsd:documentation>Audit Action Code for Application Messages.  This tells the subscriber whether the row has been added, changed, or deleted.</xsd:documentation>
          <xsd:documentation>AUDIT_ACTN is a character of length 1. Allows Uppercase characters including numbers</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="1"/>
          <xsd:whiteSpace value="preserve"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="BASE_LANGUAGE_CD_TypeDef">
        <xsd:annotation>
          <xsd:documentation>BASE_LANGUAGE_CD is a character of length 3. Allows Uppercase characters including numbers</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="3"/>
          <xsd:whiteSpace value="preserve"/>
          <xsd:pattern value="([A-Z]|[0-9]|\p{Z}|\p{P}|\p{Lu})*"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="MSG_SEQ_FLG_TypeDef">
        <xsd:annotation>
          <xsd:documentation>MSG_SEQ_FLG is a character of length 1. Allows Uppercase characters including numbers</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="1"/>
          <xsd:whiteSpace value="preserve"/>
          <xsd:pattern value="([A-Z]|[0-9]|\p{Z}|\p{P}|\p{Lu})*"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="PROCESS_INSTANCE_TypeDef">
        <xsd:annotation>
          <xsd:documentation>Process Instance</xsd:documentation>
          <xsd:documentation>PROCESS_INSTANCE is a number of length 10 with a decimal position of 0</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:integer">
          <xsd:totalDigits value="10"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="PUBLISH_RULE_ID_TypeDef">
        <xsd:annotation>
          <xsd:documentation>Publish Rule ID</xsd:documentation>
          <xsd:documentation>PUBLISH_RULE_ID is a character of length 30. Allows Uppercase characters including numbers</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="30"/>
          <xsd:whiteSpace value="preserve"/>
          <xsd:pattern value="([A-Z]|[0-9]|\p{Z}|\p{P}|\p{Lu})*"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="MSGNODENAME_TypeDef">
        <xsd:annotation>
          <xsd:documentation>Application Message Node Name.  Name of the Application Message Node Definition.</xsd:documentation>
          <xsd:documentation>MSGNODENAME is a character of length 30. Allows Uppercase characters including numbers</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="30"/>
          <xsd:whiteSpace value="preserve"/>
          <xsd:pattern value="([A-Z]|[0-9]|\p{Z}|\p{P}|\p{Lu})*"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:schema>
    <xsd:schema elementFormDefault="qualified" targetNamespace="http://xmlns.oracle.com/Enterprise/Tools/schemas/ANZ_LOC_INC_RES.v1" xmlns="http://xmlns.oracle.com/Enterprise/Tools/schemas/ANZ_LOC_INC_RES.v1" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
      <xsd:element name="ANZ_LOC_INC_RES" type="ANZ_LOC_INC_RES_TypeShape"/>
      <xsd:complexType name="ANZ_LOC_INC_RES_TypeShape">
        <xsd:sequence>
          <xsd:element name="FieldTypes" type="FieldTypes_TypeShape"/>
          <xsd:element name="MsgData" type="MsgData_TypeShape"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="FieldTypes_TypeShape">
        <xsd:all>
          <xsd:element name="ANZ_LOC_INC_RES" type="FieldTypesANZ_LOC_INC_RES_TypeShape"/>
          <xsd:element name="PSCAMA" type="FieldTypesPSCAMA_TypeShape"/>
        </xsd:all>
      </xsd:complexType>
      <xsd:complexType name="FieldTypesANZ_LOC_INC_RES_TypeShape">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="EMPLID" type="FieldTypesCharFieldType"/>
          <xsd:element minOccurs="0" name="ANZ_LANID" type="FieldTypesCharFieldType"/>
          <xsd:element minOccurs="0" name="EMPL_RCD" type="FieldTypesNumberFieldType"/>
          <xsd:element minOccurs="0" name="EFFDT" type="FieldTypesDateFieldType"/>
          <xsd:element minOccurs="0" name="EFFSEQ" type="FieldTypesNumberFieldType"/>
          <xsd:element minOccurs="0" name="DEPTID" type="FieldTypesCharFieldType"/>
          <xsd:element minOccurs="0" name="JOBCODE" type="FieldTypesCharFieldType"/>
          <xsd:element minOccurs="0" name="EMPL_STATUS" type="FieldTypesCharFieldType"/>
          <xsd:element minOccurs="0" name="ACTION" type="FieldTypesCharFieldType"/>
          <xsd:element minOccurs="0" name="ACTION_DT" type="FieldTypesDateFieldType"/>
          <xsd:element minOccurs="0" name="ACTION_REASON" type="FieldTypesCharFieldType"/>
          <xsd:element minOccurs="0" name="REG_REGION" type="FieldTypesCharFieldType"/>
          <xsd:element minOccurs="0" name="LOCATION" type="FieldTypesCharFieldType"/>
          <xsd:element minOccurs="0" name="HR_STATUS" type="FieldTypesCharFieldType"/>
          <xsd:element minOccurs="0" name="POSITION_NBR" type="FieldTypesCharFieldType"/>
          <xsd:element minOccurs="0" name="DESCR100A" type="FieldTypesCharFieldType"/>
          <xsd:element minOccurs="0" name="DESCR100B" type="FieldTypesCharFieldType"/>
          <xsd:element minOccurs="0" name="DESCR100C" type="FieldTypesCharFieldType"/>
          <xsd:element minOccurs="0" name="DESCR100D" type="FieldTypesCharFieldType"/>
          <xsd:element minOccurs="0" name="DESCR100E" type="FieldTypesCharFieldType"/>
          <xsd:element minOccurs="0" name="DESCR100F" type="FieldTypesCharFieldType"/>
          <xsd:element minOccurs="0" name="DESCR100G" type="FieldTypesCharFieldType"/>
          <xsd:element minOccurs="0" name="DESCR100H" type="FieldTypesCharFieldType"/>
          <xsd:element minOccurs="0" name="DESCR100I" type="FieldTypesCharFieldType"/>
          <xsd:element minOccurs="0" name="DESCR100J" type="FieldTypesCharFieldType"/>
          <xsd:element minOccurs="0" name="FLAG1" type="FieldTypesCharFieldType"/>
          <xsd:element minOccurs="0" name="FLAG2" type="FieldTypesCharFieldType"/>
          <xsd:element minOccurs="0" name="FLAG3" type="FieldTypesCharFieldType"/>
          <xsd:element minOccurs="0" name="FLAG4" type="FieldTypesCharFieldType"/>
          <xsd:element minOccurs="0" name="FLAG5" type="FieldTypesCharFieldType"/>
          <xsd:element minOccurs="0" name="DATE1" type="FieldTypesDateFieldType"/>
          <xsd:element minOccurs="0" name="DATE2" type="FieldTypesDateFieldType"/>
          <xsd:element minOccurs="0" name="DATE3" type="FieldTypesDateFieldType"/>
          <xsd:element minOccurs="0" name="DATE4" type="FieldTypesDateFieldType"/>
          <xsd:element minOccurs="0" name="DATE5" type="FieldTypesDateFieldType"/>
          <xsd:element minOccurs="0" name="NUMBER1" type="FieldTypesNumberFieldType"/>
          <xsd:element minOccurs="0" name="NUMBER2" type="FieldTypesNumberFieldType"/>
          <xsd:element minOccurs="0" name="NUMBER3" type="FieldTypesNumberFieldType"/>
          <xsd:element minOccurs="0" name="NUMBER4" type="FieldTypesNumberFieldType"/>
          <xsd:element minOccurs="0" name="DP_RECORDNUMBER1" type="FieldTypesNumberFieldType"/>
          <xsd:element minOccurs="0" name="DP_NUMBER01" type="FieldTypesNumberFieldType"/>
        </xsd:sequence>
        <xsd:attribute fixed="R" name="class" type="xsd:string" use="required"/>
      </xsd:complexType>
      <xsd:complexType name="FieldTypesPSCAMA_TypeShape">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="LANGUAGE_CD" type="FieldTypesCharFieldType"/>
          <xsd:element minOccurs="0" name="AUDIT_ACTN" type="FieldTypesCharFieldType"/>
          <xsd:element minOccurs="0" name="BASE_LANGUAGE_CD" type="FieldTypesCharFieldType"/>
          <xsd:element minOccurs="0" name="MSG_SEQ_FLG" type="FieldTypesCharFieldType"/>
          <xsd:element minOccurs="0" name="PROCESS_INSTANCE" type="FieldTypesNumberFieldType"/>
          <xsd:element minOccurs="0" name="PUBLISH_RULE_ID" type="FieldTypesCharFieldType"/>
          <xsd:element minOccurs="0" name="MSGNODENAME" type="FieldTypesCharFieldType"/>
        </xsd:sequence>
        <xsd:attribute fixed="R" name="class" type="xsd:string" use="required"/>
      </xsd:complexType>
      <xsd:complexType name="FieldTypesCharFieldType">
        <xsd:attribute fixed="CHAR" name="type" type="xsd:string" use="required"/>
      </xsd:complexType>
      <xsd:complexType name="FieldTypesNumberFieldType">
        <xsd:attribute fixed="NUMBER" name="type" type="xsd:string" use="required"/>
      </xsd:complexType>
      <xsd:complexType name="FieldTypesDateFieldType">
        <xsd:attribute fixed="DATE" name="type" type="xsd:string" use="required"/>
      </xsd:complexType>
      <xsd:complexType name="FieldTypesTimeFieldType">
        <xsd:attribute fixed="TIME" name="type" type="xsd:string" use="required"/>
      </xsd:complexType>
      <xsd:complexType name="FieldTypesDateTimeFieldType">
        <xsd:attribute fixed="DATETIME" name="type" type="xsd:string" use="required"/>
      </xsd:complexType>
      <xsd:complexType name="FieldTypesImageRefFieldType">
        <xsd:attribute fixed="IMAGEREFERENCE" name="type" type="xsd:string" use="required"/>
      </xsd:complexType>
      <xsd:complexType name="MsgData_TypeShape">
        <xsd:sequence>
          <xsd:element maxOccurs="unbounded" minOccurs="0" name="Transaction" type="Transaction_TypeShape"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="Transaction_TypeShape">
        <xsd:all>
          <xsd:element minOccurs="0" name="ANZ_LOC_INC_RES" type="ANZ_LOC_INC_RESMsgDataRecord_TypeShape"/>
          <xsd:element name="PSCAMA" type="PSCAMAMsgDataRecord_TypeShape"/>
        </xsd:all>
      </xsd:complexType>
      <xsd:complexType name="ANZ_LOC_INC_RESMsgDataRecord_TypeShape">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="EMPLID" type="EMPLID_TypeShape"/>
          <xsd:element minOccurs="0" name="ANZ_LANID" type="ANZ_LANID_TypeShape"/>
          <xsd:element minOccurs="0" name="EMPL_RCD" type="EMPL_RCD_TypeShape"/>
          <xsd:element minOccurs="0" name="EFFDT" type="EFFDT_TypeShape"/>
          <xsd:element minOccurs="0" name="EFFSEQ" type="EFFSEQ_TypeShape"/>
          <xsd:element minOccurs="0" name="DEPTID" type="DEPTID_TypeShape"/>
          <xsd:element minOccurs="0" name="JOBCODE" type="JOBCODE_TypeShape"/>
          <xsd:element minOccurs="0" name="EMPL_STATUS" type="EMPL_STATUS_TypeShape"/>
          <xsd:element minOccurs="0" name="ACTION" type="ACTION_TypeShape"/>
          <xsd:element minOccurs="0" name="ACTION_DT" type="ACTION_DT_TypeShape"/>
          <xsd:element minOccurs="0" name="ACTION_REASON" type="ACTION_REASON_TypeShape"/>
          <xsd:element minOccurs="0" name="REG_REGION" type="REG_REGION_TypeShape"/>
          <xsd:element minOccurs="0" name="LOCATION" type="LOCATION_TypeShape"/>
          <xsd:element minOccurs="0" name="HR_STATUS" type="HR_STATUS_TypeShape"/>
          <xsd:element minOccurs="0" name="POSITION_NBR" type="POSITION_NBR_TypeShape"/>
          <xsd:element minOccurs="0" name="DESCR100A" type="DESCR100A_TypeShape"/>
          <xsd:element minOccurs="0" name="DESCR100B" type="DESCR100B_TypeShape"/>
          <xsd:element minOccurs="0" name="DESCR100C" type="DESCR100C_TypeShape"/>
          <xsd:element minOccurs="0" name="DESCR100D" type="DESCR100D_TypeShape"/>
          <xsd:element minOccurs="0" name="DESCR100E" type="DESCR100E_TypeShape"/>
          <xsd:element minOccurs="0" name="DESCR100F" type="DESCR100F_TypeShape"/>
          <xsd:element minOccurs="0" name="DESCR100G" type="DESCR100G_TypeShape"/>
          <xsd:element minOccurs="0" name="DESCR100H" type="DESCR100H_TypeShape"/>
          <xsd:element minOccurs="0" name="DESCR100I" type="DESCR100I_TypeShape"/>
          <xsd:element minOccurs="0" name="DESCR100J" type="DESCR100J_TypeShape"/>
          <xsd:element minOccurs="0" name="FLAG1" type="FLAG1_TypeShape"/>
          <xsd:element minOccurs="0" name="FLAG2" type="FLAG2_TypeShape"/>
          <xsd:element minOccurs="0" name="FLAG3" type="FLAG3_TypeShape"/>
          <xsd:element minOccurs="0" name="FLAG4" type="FLAG4_TypeShape"/>
          <xsd:element minOccurs="0" name="FLAG5" type="FLAG5_TypeShape"/>
          <xsd:element minOccurs="0" name="DATE1" type="DATE1_TypeShape"/>
          <xsd:element minOccurs="0" name="DATE2" type="DATE2_TypeShape"/>
          <xsd:element minOccurs="0" name="DATE3" type="DATE3_TypeShape"/>
          <xsd:element minOccurs="0" name="DATE4" type="DATE4_TypeShape"/>
          <xsd:element minOccurs="0" name="DATE5" type="DATE5_TypeShape"/>
          <xsd:element minOccurs="0" name="NUMBER1" type="NUMBER1_TypeShape"/>
          <xsd:element minOccurs="0" name="NUMBER2" type="NUMBER2_TypeShape"/>
          <xsd:element minOccurs="0" name="NUMBER3" type="NUMBER3_TypeShape"/>
          <xsd:element minOccurs="0" name="NUMBER4" type="NUMBER4_TypeShape"/>
          <xsd:element minOccurs="0" name="DP_RECORDNUMBER1" type="DP_RECORDNUMBER1_TypeShape"/>
          <xsd:element minOccurs="0" name="DP_NUMBER01" type="DP_NUMBER01_TypeShape"/>
        </xsd:sequence>
        <xsd:attribute fixed="R" name="class" type="xsd:string" use="required"/>
      </xsd:complexType>
      <xsd:complexType name="EMPLID_TypeShape">
        <xsd:simpleContent>
          <xsd:extension base="EMPLID_TypeDef">
            <xsd:attribute name="IsChanged" type="xsd:string" use="optional"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="ANZ_LANID_TypeShape">
        <xsd:simpleContent>
          <xsd:extension base="ANZ_LANID_TypeDef">
            <xsd:attribute name="IsChanged" type="xsd:string" use="optional"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="EMPL_RCD_TypeShape">
        <xsd:simpleContent>
          <xsd:extension base="EMPL_RCD_TypeDef">
            <xsd:attribute name="IsChanged" type="xsd:string" use="optional"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="EFFDT_TypeShape">
        <xsd:simpleContent>
          <xsd:extension base="EFFDT_TypeDef">
            <xsd:attribute name="IsChanged" type="xsd:string" use="optional"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="EFFSEQ_TypeShape">
        <xsd:simpleContent>
          <xsd:extension base="EFFSEQ_TypeDef">
            <xsd:attribute name="IsChanged" type="xsd:string" use="optional"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="DEPTID_TypeShape">
        <xsd:simpleContent>
          <xsd:extension base="DEPTID_TypeDef">
            <xsd:attribute name="IsChanged" type="xsd:string" use="optional"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="JOBCODE_TypeShape">
        <xsd:simpleContent>
          <xsd:extension base="JOBCODE_TypeDef">
            <xsd:attribute name="IsChanged" type="xsd:string" use="optional"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="EMPL_STATUS_TypeShape">
        <xsd:simpleContent>
          <xsd:extension base="EMPL_STATUS_TypeDef">
            <xsd:attribute name="IsChanged" type="xsd:string" use="optional"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="ACTION_TypeShape">
        <xsd:simpleContent>
          <xsd:extension base="ACTION_TypeDef">
            <xsd:attribute name="IsChanged" type="xsd:string" use="optional"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="ACTION_DT_TypeShape">
        <xsd:simpleContent>
          <xsd:extension base="ACTION_DT_TypeDef">
            <xsd:attribute name="IsChanged" type="xsd:string" use="optional"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="ACTION_REASON_TypeShape">
        <xsd:simpleContent>
          <xsd:extension base="ACTION_REASON_TypeDef">
            <xsd:attribute name="IsChanged" type="xsd:string" use="optional"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="REG_REGION_TypeShape">
        <xsd:simpleContent>
          <xsd:extension base="REG_REGION_TypeDef">
            <xsd:attribute name="IsChanged" type="xsd:string" use="optional"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="LOCATION_TypeShape">
        <xsd:simpleContent>
          <xsd:extension base="LOCATION_TypeDef">
            <xsd:attribute name="IsChanged" type="xsd:string" use="optional"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="HR_STATUS_TypeShape">
        <xsd:simpleContent>
          <xsd:extension base="HR_STATUS_TypeDef">
            <xsd:attribute name="IsChanged" type="xsd:string" use="optional"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="POSITION_NBR_TypeShape">
        <xsd:simpleContent>
          <xsd:extension base="POSITION_NBR_TypeDef">
            <xsd:attribute name="IsChanged" type="xsd:string" use="optional"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="DESCR100A_TypeShape">
        <xsd:simpleContent>
          <xsd:extension base="DESCR100A_TypeDef">
            <xsd:attribute name="IsChanged" type="xsd:string" use="optional"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="DESCR100B_TypeShape">
        <xsd:simpleContent>
          <xsd:extension base="DESCR100B_TypeDef">
            <xsd:attribute name="IsChanged" type="xsd:string" use="optional"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="DESCR100C_TypeShape">
        <xsd:simpleContent>
          <xsd:extension base="DESCR100C_TypeDef">
            <xsd:attribute name="IsChanged" type="xsd:string" use="optional"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="DESCR100D_TypeShape">
        <xsd:simpleContent>
          <xsd:extension base="DESCR100D_TypeDef">
            <xsd:attribute name="IsChanged" type="xsd:string" use="optional"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="DESCR100E_TypeShape">
        <xsd:simpleContent>
          <xsd:extension base="DESCR100E_TypeDef">
            <xsd:attribute name="IsChanged" type="xsd:string" use="optional"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="DESCR100F_TypeShape">
        <xsd:simpleContent>
          <xsd:extension base="DESCR100F_TypeDef">
            <xsd:attribute name="IsChanged" type="xsd:string" use="optional"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="DESCR100G_TypeShape">
        <xsd:simpleContent>
          <xsd:extension base="DESCR100G_TypeDef">
            <xsd:attribute name="IsChanged" type="xsd:string" use="optional"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="DESCR100H_TypeShape">
        <xsd:simpleContent>
          <xsd:extension base="DESCR100H_TypeDef">
            <xsd:attribute name="IsChanged" type="xsd:string" use="optional"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="DESCR100I_TypeShape">
        <xsd:simpleContent>
          <xsd:extension base="DESCR100I_TypeDef">
            <xsd:attribute name="IsChanged" type="xsd:string" use="optional"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="DESCR100J_TypeShape">
        <xsd:simpleContent>
          <xsd:extension base="DESCR100J_TypeDef">
            <xsd:attribute name="IsChanged" type="xsd:string" use="optional"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="FLAG1_TypeShape">
        <xsd:simpleContent>
          <xsd:extension base="FLAG1_TypeDef">
            <xsd:attribute name="IsChanged" type="xsd:string" use="optional"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="FLAG2_TypeShape">
        <xsd:simpleContent>
          <xsd:extension base="FLAG2_TypeDef">
            <xsd:attribute name="IsChanged" type="xsd:string" use="optional"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="FLAG3_TypeShape">
        <xsd:simpleContent>
          <xsd:extension base="FLAG3_TypeDef">
            <xsd:attribute name="IsChanged" type="xsd:string" use="optional"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="FLAG4_TypeShape">
        <xsd:simpleContent>
          <xsd:extension base="FLAG4_TypeDef">
            <xsd:attribute name="IsChanged" type="xsd:string" use="optional"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="FLAG5_TypeShape">
        <xsd:simpleContent>
          <xsd:extension base="FLAG5_TypeDef">
            <xsd:attribute name="IsChanged" type="xsd:string" use="optional"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="DATE1_TypeShape">
        <xsd:simpleContent>
          <xsd:extension base="DATE1_TypeDef">
            <xsd:attribute name="IsChanged" type="xsd:string" use="optional"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="DATE2_TypeShape">
        <xsd:simpleContent>
          <xsd:extension base="DATE2_TypeDef">
            <xsd:attribute name="IsChanged" type="xsd:string" use="optional"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="DATE3_TypeShape">
        <xsd:simpleContent>
          <xsd:extension base="DATE3_TypeDef">
            <xsd:attribute name="IsChanged" type="xsd:string" use="optional"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="DATE4_TypeShape">
        <xsd:simpleContent>
          <xsd:extension base="DATE4_TypeDef">
            <xsd:attribute name="IsChanged" type="xsd:string" use="optional"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="DATE5_TypeShape">
        <xsd:simpleContent>
          <xsd:extension base="DATE5_TypeDef">
            <xsd:attribute name="IsChanged" type="xsd:string" use="optional"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="NUMBER1_TypeShape">
        <xsd:simpleContent>
          <xsd:extension base="NUMBER1_TypeDef">
            <xsd:attribute name="IsChanged" type="xsd:string" use="optional"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="NUMBER2_TypeShape">
        <xsd:simpleContent>
          <xsd:extension base="NUMBER2_TypeDef">
            <xsd:attribute name="IsChanged" type="xsd:string" use="optional"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="NUMBER3_TypeShape">
        <xsd:simpleContent>
          <xsd:extension base="NUMBER3_TypeDef">
            <xsd:attribute name="IsChanged" type="xsd:string" use="optional"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="NUMBER4_TypeShape">
        <xsd:simpleContent>
          <xsd:extension base="NUMBER4_TypeDef">
            <xsd:attribute name="IsChanged" type="xsd:string" use="optional"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="DP_RECORDNUMBER1_TypeShape">
        <xsd:simpleContent>
          <xsd:extension base="DP_RECORDNUMBER1_TypeDef">
            <xsd:attribute name="IsChanged" type="xsd:string" use="optional"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="DP_NUMBER01_TypeShape">
        <xsd:simpleContent>
          <xsd:extension base="DP_NUMBER01_TypeDef">
            <xsd:attribute name="IsChanged" type="xsd:string" use="optional"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:simpleType name="EMPLID_TypeDef">
        <xsd:annotation>
          <xsd:documentation>Employee ID</xsd:documentation>
          <xsd:documentation>EMPLID is a character of length 11. Allows Uppercase characters including numbers</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="11"/>
          <xsd:whiteSpace value="preserve"/>
          <xsd:pattern value="([A-Z]|[0-9]|\p{Z}|\p{P}|\p{Lu})*"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="ANZ_LANID_TypeDef">
        <xsd:annotation>
          <xsd:documentation>MArk Plummer/ANZWR100113/24-4-2014
Increased size to 20 to allow longer lanids to be used including admin accounts 

Prashanth Haligya
ANZWR27100
29/08/2011
Added a field label

Santhana, 3/10/2002
ANZTSR9601_SEC
- Employee LAN id field

C.Sridhar, 01/08/2006
ANZWR03364
INFMS89 Implementaion for SSO</xsd:documentation>
          <xsd:documentation>ANZ_LANID is a character of length 20</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="20"/>
          <xsd:whiteSpace value="preserve"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="EMPL_RCD_TypeDef">
        <xsd:annotation>
          <xsd:documentation>Empl Rcd Nbr                  </xsd:documentation>
          <xsd:documentation>EMPL_RCD is a number of length 3 with a decimal position of 0</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:integer">
          <xsd:totalDigits value="3"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="EFFDT_TypeDef">
        <xsd:annotation>
          <xsd:documentation>Effective Date</xsd:documentation>
          <xsd:documentation>EFFDT is a date.</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:date">
          <xsd:pattern value="(\d{4}-\d{2}-\d{2})"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="EFFSEQ_TypeDef">
        <xsd:annotation>
          <xsd:documentation>Effective Sequence            </xsd:documentation>
          <xsd:documentation>EFFSEQ is a number of length 3 with a decimal position of 0</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:integer">
          <xsd:totalDigits value="3"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="DEPTID_TypeDef">
        <xsd:annotation>
          <xsd:documentation>Department.
/***********************************************************************************Project                 :ANZWR100955_COUNTRY_SETUP
Work Request     :WR100955
Developer            :Nagaraju Rayapati
Date                     :13/Apr/2016
Description           : As part of Promadis project added Property Label to DEPTID Field.
************************************************************************************/</xsd:documentation>
          <xsd:documentation>DEPTID is a character of length 10. Allows Uppercase characters including numbers</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="10"/>
          <xsd:whiteSpace value="preserve"/>
          <xsd:pattern value="([A-Z]|[0-9]|\p{Z}|\p{P}|\p{Lu})*"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="JOBCODE_TypeDef">
        <xsd:annotation>
          <xsd:documentation>Job Code</xsd:documentation>
          <xsd:documentation>JOBCODE is a character of length 6. Allows Uppercase characters including numbers</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="6"/>
          <xsd:whiteSpace value="preserve"/>
          <xsd:pattern value="([A-Z]|[0-9]|\p{Z}|\p{P}|\p{Lu})*"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="EMPL_STATUS_TypeDef">
        <xsd:annotation>
          <xsd:documentation>Employee Status</xsd:documentation>
          <xsd:documentation>EMPL_STATUS is a character of length 1. Allows Uppercase characters including numbers</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="1"/>
          <xsd:whiteSpace value="preserve"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="ACTION_TypeDef">
        <xsd:annotation>
          <xsd:documentation>Action                        </xsd:documentation>
          <xsd:documentation>ACTION is a character of length 3. Allows Uppercase characters including numbers</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="3"/>
          <xsd:whiteSpace value="preserve"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="ACTION_DT_TypeDef">
        <xsd:annotation>
          <xsd:documentation>Action Date                   </xsd:documentation>
          <xsd:documentation>ACTION_DT is a date.</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:date">
          <xsd:pattern value="(\d{4}-\d{2}-\d{2})"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="ACTION_REASON_TypeDef">
        <xsd:annotation>
          <xsd:documentation>Reason Code                   </xsd:documentation>
          <xsd:documentation>ACTION_REASON is a character of length 3. Allows Uppercase characters including numbers</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="3"/>
          <xsd:whiteSpace value="preserve"/>
          <xsd:pattern value="([A-Z]|[0-9]|\p{Z}|\p{P}|\p{Lu})*"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="REG_REGION_TypeDef">
        <xsd:annotation>
          <xsd:documentation>Regulatory Region             </xsd:documentation>
          <xsd:documentation>REG_REGION is a character of length 5. Allows Uppercase characters including numbers</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="5"/>
          <xsd:whiteSpace value="preserve"/>
          <xsd:pattern value="([A-Z]|[0-9]|\p{Z}|\p{P}|\p{Lu})*"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="LOCATION_TypeDef">
        <xsd:annotation>
          <xsd:documentation>Location Code</xsd:documentation>
          <xsd:documentation>LOCATION is a character of length 10. Allows Uppercase characters including numbers</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="10"/>
          <xsd:whiteSpace value="preserve"/>
          <xsd:pattern value="([A-Z]|[0-9]|\p{Z}|\p{P}|\p{Lu})*"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="HR_STATUS_TypeDef">
        <xsd:annotation>
          <xsd:documentation>ANZWR100055
Modified by: Paramita chakraborty
06-01-2014
Created new fields for storing HR_STATUS coming from HR through IB</xsd:documentation>
          <xsd:documentation>HR_STATUS is a character of length 1. Allows Uppercase characters including numbers</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="1"/>
          <xsd:whiteSpace value="preserve"/>
          <xsd:pattern value="([A-Z]|[0-9]|\p{Z}|\p{P}|\p{Lu})*"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="POSITION_NBR_TypeDef">
        <xsd:annotation>
          <xsd:documentation>Position Number               </xsd:documentation>
          <xsd:documentation>POSITION_NBR is a character of length 8. Allows Uppercase characters including numbers</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="8"/>
          <xsd:whiteSpace value="preserve"/>
          <xsd:pattern value="([A-Z]|[0-9]|\p{Z}|\p{P}|\p{Lu})*"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="DESCR100A_TypeDef">
        <xsd:annotation>
          <xsd:documentation>DESCR100A is a character of length 100</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="100"/>
          <xsd:whiteSpace value="preserve"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="DESCR100B_TypeDef">
        <xsd:annotation>
          <xsd:documentation>DESCR100B is a character of length 100</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="100"/>
          <xsd:whiteSpace value="preserve"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="DESCR100C_TypeDef">
        <xsd:annotation>
          <xsd:documentation>DESCR100C is a character of length 100</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="100"/>
          <xsd:whiteSpace value="preserve"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="DESCR100D_TypeDef">
        <xsd:annotation>
          <xsd:documentation>DESCR100D is a character of length 100</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="100"/>
          <xsd:whiteSpace value="preserve"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="DESCR100E_TypeDef">
        <xsd:annotation>
          <xsd:documentation>DESCR100E is a character of length 100</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="100"/>
          <xsd:whiteSpace value="preserve"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="DESCR100F_TypeDef">
        <xsd:annotation>
          <xsd:documentation>DESCR100F is a character of length 100</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="100"/>
          <xsd:whiteSpace value="preserve"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="DESCR100G_TypeDef">
        <xsd:annotation>
          <xsd:documentation>DESCR100G is a character of length 100</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="100"/>
          <xsd:whiteSpace value="preserve"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="DESCR100H_TypeDef">
        <xsd:annotation>
          <xsd:documentation>DESCR100H is a character of length 100</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="100"/>
          <xsd:whiteSpace value="preserve"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="DESCR100I_TypeDef">
        <xsd:annotation>
          <xsd:documentation>DESCR100I is a character of length 100</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="100"/>
          <xsd:whiteSpace value="preserve"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="DESCR100J_TypeDef">
        <xsd:annotation>
          <xsd:documentation>DESCR100J is a character of length 100</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="100"/>
          <xsd:whiteSpace value="preserve"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="FLAG1_TypeDef">
        <xsd:annotation>
          <xsd:documentation>J.Chavarria, 22/01/2002
ANZCR1538_R4
- include new label ID (ANZ_PS_CONFIG_DATA) for the Reporting dataStore setup.</xsd:documentation>
          <xsd:documentation>FLAG1 is a character of length 1. Allows Uppercase characters including numbers</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="1"/>
          <xsd:whiteSpace value="preserve"/>
          <xsd:pattern value="([A-Z]|[0-9]|\p{Z}|\p{P}|\p{Lu})*"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="FLAG2_TypeDef">
        <xsd:annotation>
          <xsd:documentation>J.Chavarria, 22/01/2002
ANZCR1538_R4
- include new label ID (ANZ_PS_INQUIRY) for the Reporting dataStore setup.</xsd:documentation>
          <xsd:documentation>FLAG2 is a character of length 1. Allows Uppercase characters including numbers</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="1"/>
          <xsd:whiteSpace value="preserve"/>
          <xsd:pattern value="([A-Z]|[0-9]|\p{Z}|\p{P}|\p{Lu})*"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="FLAG3_TypeDef">
        <xsd:annotation>
          <xsd:documentation>J.Chavarria, 22/01/2002
ANZCR1538_R4
- include new label ID (ANZ_GENERATE_VIEW) for the Reporting dataStore setup.</xsd:documentation>
          <xsd:documentation>FLAG3 is a character of length 1. Allows Uppercase characters including numbers</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="1"/>
          <xsd:whiteSpace value="preserve"/>
          <xsd:pattern value="([A-Z]|[0-9]|\p{Z}|\p{P}|\p{Lu})*"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="FLAG4_TypeDef">
        <xsd:annotation>
          <xsd:documentation>J.Chavarria, 22/01/2002
ANZCR1538_R4
- include new label ID (ANZ_WITH_HISTORY) for the Reporting dataStore setup.</xsd:documentation>
          <xsd:documentation>FLAG4 is a character of length 1. Allows Uppercase characters including numbers</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="1"/>
          <xsd:whiteSpace value="preserve"/>
          <xsd:pattern value="([A-Z]|[0-9]|\p{Z}|\p{P}|\p{Lu})*"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="FLAG5_TypeDef">
        <xsd:annotation>
          <xsd:documentation>FLAG5 is a character of length 1. Allows Uppercase characters including numbers</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="1"/>
          <xsd:whiteSpace value="preserve"/>
          <xsd:pattern value="([A-Z]|[0-9]|\p{Z}|\p{P}|\p{Lu})*"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="DATE1_TypeDef">
        <xsd:annotation>
          <xsd:documentation>DATE1 is a date.</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:date">
          <xsd:pattern value="(\d{4}-\d{2}-\d{2})"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="DATE2_TypeDef">
        <xsd:annotation>
          <xsd:documentation>DATE2 is a date.</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:date">
          <xsd:pattern value="(\d{4}-\d{2}-\d{2})"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="DATE3_TypeDef">
        <xsd:annotation>
          <xsd:documentation>DATE3 is a date.</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:date">
          <xsd:pattern value="(\d{4}-\d{2}-\d{2})"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="DATE4_TypeDef">
        <xsd:annotation>
          <xsd:documentation>DATE4 is a date.</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:date">
          <xsd:pattern value="(\d{4}-\d{2}-\d{2})"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="DATE5_TypeDef">
        <xsd:annotation>
          <xsd:documentation>DATE5 is a date.</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:date">
          <xsd:pattern value="(\d{4}-\d{2}-\d{2})"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="NUMBER1_TypeDef">
        <xsd:annotation>
          <xsd:documentation>NUMBER1 is a number of length 10 with a decimal position of 0</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:integer">
          <xsd:totalDigits value="10"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="NUMBER2_TypeDef">
        <xsd:annotation>
          <xsd:documentation>NUMBER2 is a number of length 10 with a decimal position of 0</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:integer">
          <xsd:totalDigits value="10"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="NUMBER3_TypeDef">
        <xsd:annotation>
          <xsd:documentation>NUMBER3 is a number of length 10 with a decimal position of 0</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:integer">
          <xsd:totalDigits value="10"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="NUMBER4_TypeDef">
        <xsd:annotation>
          <xsd:documentation>NUMBER4 is a number of length 10 with a decimal position of 0</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:integer">
          <xsd:totalDigits value="10"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="DP_RECORDNUMBER1_TypeDef">
        <xsd:annotation>
          <xsd:documentation>DP_RECORDNUMBER1  </xsd:documentation>
          <xsd:documentation>DP_RECORDNUMBER1 is a number of length 8 with a decimal position of 0</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:integer">
          <xsd:totalDigits value="8"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="DP_NUMBER01_TypeDef">
        <xsd:annotation>
          <xsd:documentation>DP_NUMBER01       </xsd:documentation>
          <xsd:documentation>DP_NUMBER01 is a number of length 16 with a decimal position of 4</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:decimal">
          <xsd:fractionDigits value="4"/>
          <xsd:totalDigits value="16"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="PSCAMAMsgDataRecord_TypeShape">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="LANGUAGE_CD" type="LANGUAGE_CD_TypeShape"/>
          <xsd:element minOccurs="0" name="AUDIT_ACTN" type="AUDIT_ACTN_TypeShape"/>
          <xsd:element minOccurs="0" name="BASE_LANGUAGE_CD" type="BASE_LANGUAGE_CD_TypeShape"/>
          <xsd:element minOccurs="0" name="MSG_SEQ_FLG" type="MSG_SEQ_FLG_TypeShape"/>
          <xsd:element minOccurs="0" name="PROCESS_INSTANCE" type="PROCESS_INSTANCE_TypeShape"/>
          <xsd:element minOccurs="0" name="PUBLISH_RULE_ID" type="PUBLISH_RULE_ID_TypeShape"/>
          <xsd:element minOccurs="0" name="MSGNODENAME" type="MSGNODENAME_TypeShape"/>
        </xsd:sequence>
        <xsd:attribute fixed="R" name="class" type="xsd:string" use="required"/>
      </xsd:complexType>
      <xsd:complexType name="LANGUAGE_CD_TypeShape">
        <xsd:simpleContent>
          <xsd:extension base="LANGUAGE_CD_TypeDef">
            <xsd:attribute name="IsChanged" type="xsd:string" use="optional"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="AUDIT_ACTN_TypeShape">
        <xsd:simpleContent>
          <xsd:extension base="AUDIT_ACTN_TypeDef">
            <xsd:attribute name="IsChanged" type="xsd:string" use="optional"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="BASE_LANGUAGE_CD_TypeShape">
        <xsd:simpleContent>
          <xsd:extension base="BASE_LANGUAGE_CD_TypeDef">
            <xsd:attribute name="IsChanged" type="xsd:string" use="optional"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="MSG_SEQ_FLG_TypeShape">
        <xsd:simpleContent>
          <xsd:extension base="MSG_SEQ_FLG_TypeDef">
            <xsd:attribute name="IsChanged" type="xsd:string" use="optional"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="PROCESS_INSTANCE_TypeShape">
        <xsd:simpleContent>
          <xsd:extension base="PROCESS_INSTANCE_TypeDef">
            <xsd:attribute name="IsChanged" type="xsd:string" use="optional"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="PUBLISH_RULE_ID_TypeShape">
        <xsd:simpleContent>
          <xsd:extension base="PUBLISH_RULE_ID_TypeDef">
            <xsd:attribute name="IsChanged" type="xsd:string" use="optional"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="MSGNODENAME_TypeShape">
        <xsd:simpleContent>
          <xsd:extension base="MSGNODENAME_TypeDef">
            <xsd:attribute name="IsChanged" type="xsd:string" use="optional"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:simpleType name="LANGUAGE_CD_TypeDef">
        <xsd:annotation>
          <xsd:documentation>Language Code</xsd:documentation>
          <xsd:documentation>LANGUAGE_CD is a character of length 3. Allows Uppercase characters including numbers</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="3"/>
          <xsd:whiteSpace value="preserve"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="AUDIT_ACTN_TypeDef">
        <xsd:annotation>
          <xsd:documentation>Audit Action Code for Application Messages.  This tells the subscriber whether the row has been added, changed, or deleted.</xsd:documentation>
          <xsd:documentation>AUDIT_ACTN is a character of length 1. Allows Uppercase characters including numbers</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="1"/>
          <xsd:whiteSpace value="preserve"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="BASE_LANGUAGE_CD_TypeDef">
        <xsd:annotation>
          <xsd:documentation>BASE_LANGUAGE_CD is a character of length 3. Allows Uppercase characters including numbers</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="3"/>
          <xsd:whiteSpace value="preserve"/>
          <xsd:pattern value="([A-Z]|[0-9]|\p{Z}|\p{P}|\p{Lu})*"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="MSG_SEQ_FLG_TypeDef">
        <xsd:annotation>
          <xsd:documentation>MSG_SEQ_FLG is a character of length 1. Allows Uppercase characters including numbers</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="1"/>
          <xsd:whiteSpace value="preserve"/>
          <xsd:pattern value="([A-Z]|[0-9]|\p{Z}|\p{P}|\p{Lu})*"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="PROCESS_INSTANCE_TypeDef">
        <xsd:annotation>
          <xsd:documentation>Process Instance</xsd:documentation>
          <xsd:documentation>PROCESS_INSTANCE is a number of length 10 with a decimal position of 0</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:integer">
          <xsd:totalDigits value="10"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="PUBLISH_RULE_ID_TypeDef">
        <xsd:annotation>
          <xsd:documentation>Publish Rule ID</xsd:documentation>
          <xsd:documentation>PUBLISH_RULE_ID is a character of length 30. Allows Uppercase characters including numbers</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="30"/>
          <xsd:whiteSpace value="preserve"/>
          <xsd:pattern value="([A-Z]|[0-9]|\p{Z}|\p{P}|\p{Lu})*"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="MSGNODENAME_TypeDef">
        <xsd:annotation>
          <xsd:documentation>Application Message Node Name.  Name of the Application Message Node Definition.</xsd:documentation>
          <xsd:documentation>MSGNODENAME is a character of length 30. Allows Uppercase characters including numbers</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="30"/>
          <xsd:whiteSpace value="preserve"/>
          <xsd:pattern value="([A-Z]|[0-9]|\p{Z}|\p{P}|\p{Lu})*"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="ANZ_LOC_INC_REQ.v1">
    <wsdl:documentation>Incremental Location Request</wsdl:documentation>
    <wsdl:part element="ANZ_LOC_INC_REQ.v1:ANZ_LOC_INC_REQ" name="parameter"/>
  </wsdl:message>
  <wsdl:message name="ANZ_LOC_INC_RES.v1">
    <wsdl:documentation>Location Incremental Response</wsdl:documentation>
    <wsdl:part element="ANZ_LOC_INC_RES.v1:ANZ_LOC_INC_RES" name="parameter"/>
  </wsdl:message>
  <wsdl:portType name="ANZ_LOCATION_INC_DETAIL_PortType">
    <wsdl:operation name="ANZ_LOCATION_INC_DETAIL">
      <wsdl:documentation>Location Incremental Details</wsdl:documentation>
      <wsdl:input message="tns:ANZ_LOC_INC_REQ.v1" name="ANZ_LOC_INC_REQ.v1"/>
      <wsdl:output message="tns:ANZ_LOC_INC_RES.v1" name="ANZ_LOC_INC_RES.v1"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="ANZ_LOCATION_INC_DETAIL_Binding" type="tns:ANZ_LOCATION_INC_DETAIL_PortType">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="ANZ_LOCATION_INC_DETAIL">
      <soap:operation soapAction="ANZ_LOCATION_INC_DETAIL.v1" style="document"/>
      <wsp:Policy wsu:Id="UsernameTokenSecurityPolicyPasswordRequired" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
        <wsp:ExactlyOne>
          <wsp:All>
            <wsse:SecurityToken wsp:Usage="wsp:Required" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
              <wsse:TokenType>wsse:UserNameToken</wsse:TokenType>
              <Claims>
                <SubjectName MatchType="wsse:Exact"/>
                <UsePassword wsp:Usage="wsp:Required"/>
              </Claims>
            </wsse:SecurityToken>
          </wsp:All>
        </wsp:ExactlyOne>
      </wsp:Policy>
      <wsdl:input name="ANZ_LOC_INC_REQ.v1">
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:input>
      <wsdl:output name="ANZ_LOC_INC_RES.v1">
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="ANZ_LOCATION_INC_DETAIL">
    <wsdl:documentation>Get Incremental Location Det</wsdl:documentation>
    <wsdl:port binding="tns:ANZ_LOCATION_INC_DETAIL_Binding" name="ANZ_LOCATION_INC_DETAIL_Port">
      <soap:address location="http://gbfsint.peoplesoft.service.dev:8100/PSIGW/PeopleSoftServiceListeningConnector"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>